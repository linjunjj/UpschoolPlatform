<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.linjun.dao.ApiUserStudentCardMapper">

    <select id="queryObject" resultType="com.linjun.entity.UserStudentCardVo">
        select * from user_studentcard where id = #{value}
    </select>

    <select id="queryList" resultType="com.linjun.entity.UserStudentCardVo">
        select * from user_studentcard
        <where>
            <where>
                <if test="user_id != null">
                    and user_id = #{user_id}
                </if>
            </where>
        </where>
        order by id desc
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from user_studentcard
        <where>
            <where>
                <if test="user_id != null">
                    and user_id = #{user_id}
                </if>
            </where>
        </where>
    </select>

    <insert id="save" parameterType="com.linjun.entity.UserStudentCardVo" useGeneratedKeys="true" keyProperty="id">
        insert into user_studentcard
        (
        `userId`,
        `studentcard_font`,
        `studentcard_back`,
        `status`,
        `create_time`
        )
        values
        (
        #{userId},
        #{studentcard_font},
        #{studentcard_back},
        #{status},
        #{create_time}
        )
    </insert>

    <update id="update" parameterType="com.linjun.entity.UserStudentCardVo">
        update user_studentcard
        <set>
            <if test="userId != null">`userId` = #{userId}, </if>
            <if test="studentcard_font != null">`studentcard_font` = #{studentcard_font}, </if>
            <if test="studentcard_back != null">`studentcard_back` = #{studentcard_back}, </if>
            <if test="status != null">`status` = #{status},</if>
            <if test="create_time != null">`create_time` = #{create_time} </if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
        delete from user_studentcard where id = #{value}
    </delete>

    <delete id="deleteBatch">
        delete from user_studentcard where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>