<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.linjun.dao.ApiSearchHistoryMapper">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.linjun.entity.SearchHistoryVo" id="searchHistoryMap">
        <result property="id" column="id"/>
        <result property="keyword" column="keyword"/>
        <result property="from" column="from"/>
        <result property="add_time" column="add_time"/>
        <result property="user_id" column="user_id"/>
        <result property="user_name" column="user_name"/>
    </resultMap>

    <select id="queryObject" resultType="com.linjun.entity.SearchHistoryVo">
		select * from search_history where id = #{value}
	</select>

    <select id="queryList" resultMap="searchHistoryMap">
        select a.* ,b.username as user_name
        from search_history a
        left join mongo_user b on a.user_id = b.id
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by a.id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
		select count(*) from search_history
	</select>

    <insert id="save" parameterType="com.linjun.entity.SearchHistoryVo" useGeneratedKeys="true" keyProperty="id">
		insert into search_history
		(
			`keyword`,
			`from`,
			`add_time`,
			`user_id`
		)
		values
		(
			#{keyword},
			#{from},
			#{addTime},
			#{userId}
		)
	</insert>

    <update id="update" parameterType="com.linjun.entity.SearchHistoryVo">
        update search_history
        <set>
            <if test="keyword != null">`keyword` = #{keyword},</if>
            <if test="from != null">`from` = #{from},</if>
            <if test="addTime != null">`add_time` = #{addTime},</if>
            <if test="userId != null">`user_id` = #{userId}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from search_history where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from search_history where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>